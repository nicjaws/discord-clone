{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicjaws/Documents/GitHub/React/discord-clone/client/src/AppProviders.js\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport customTheme from \"utils/theme\";\nimport GlobalState from \"./components/sections/GlobalState\";\nconst client = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      cacheTime: 0\n    }\n  }\n});\nexport default function AppProviders({\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: client,\n    children: [/*#__PURE__*/_jsxDEV(ColorModeScript, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      theme: customTheme,\n      children: /*#__PURE__*/_jsxDEV(GlobalState, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = AppProviders;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProviders\");","map":{"version":3,"sources":["/Users/nicjaws/Documents/GitHub/React/discord-clone/client/src/AppProviders.js"],"names":["ChakraProvider","ColorModeScript","React","QueryClient","QueryClientProvider","BrowserRouter","Router","customTheme","GlobalState","client","defaultOptions","queries","refetchOnWindowFocus","staleTime","Infinity","cacheTime","AppProviders","children"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,aAAjD;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,MAAMC,MAAM,GAAG,IAAIN,WAAJ,CAAgB;AAC7BO,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,oBAAoB,EAAE,KADf;AAEPC,MAAAA,SAAS,EAAEC,QAFJ;AAGPC,MAAAA,SAAS,EAAE;AAHJ;AADK;AADa,CAAhB,CAAf;AAUA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACjD,sBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAER,MAA7B;AAAA,4BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEF,WAAvB;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,MAAD;AAAA,oBAASU;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KAXuBD,Y","sourcesContent":["import { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport customTheme from \"utils/theme\";\nimport GlobalState from \"./components/sections/GlobalState\";\n\nconst client = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      cacheTime: 0,\n    },\n  },\n});\n\nexport default function AppProviders({ children }) {\n  return (\n    <QueryClientProvider client={client}>\n      <ColorModeScript />\n      <ChakraProvider theme={customTheme}>\n        <GlobalState>\n          <Router>{children}</Router>\n        </GlobalState>\n      </ChakraProvider>\n    </QueryClientProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}